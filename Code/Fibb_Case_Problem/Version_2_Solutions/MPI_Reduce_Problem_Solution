#include <mpi.h>     // included in the conda enviorment manager
#include <stdio.h>
#include <math.h>
#include <stdlib.h>

/*
This code is a further modification of the fibb_sequence_solver. This code update includes various optimizations and
additions for the sake of perfomance and computation time.
*/

// function computation that solves the case problem
int FibbSolver() {
        int num1 = 1;
        int num2 = 1;
        int rank = 0;
        int x = 0;
        int SumNum = 0;                                          
            while
                (SumNum < 4000001) {                                    
                SumNum = num1 + num2;
                num1 = num2;
                num2 = SumNum;
                if
                    (SumNum % 2 == 0) {
                    // printf(" %d \n", SumNum);
                    x = SumNum + x;
                }
            }
    return x;
}

int
main(int argc, char* argv[]) {

    // initalize the C MPI code. Defualt rank = 0
    
    int rank = 0, size;
    MPI_Init(NULL, NULL);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    // initalize Userinput
    int TestCount = 99;
    int y = FibbSolver();

    
    // for problems requiring multiple answers quickly, this is an adquate apparoach.
    for (int i = 0; i != TestCount; i = i + 3)
        if (rank == 0) {
            MPI_Bcast(&y, 1, MPI_INT, 0, MPI_COMM_WORLD);
        }
        else {
            printf("I am process %d and I have recieved the number: %d \n \n", rank, y);
            fflush(stdout);
        }

    MPI_Finalize();

    return 0;
}
